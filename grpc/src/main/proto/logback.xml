<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2010-2011 The myBatis Team
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
        http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<configuration debug="false">
    <!--定义日志文件的存储地址 通过程序用类路径指定日志路径-->
    <define name="LOG_HOME" class="com.temp.common.base.log.logback.LogDataPath"></define>
    <!--     动态生产日志，根据用户的主机名或者其他什么东西，自己定义  -->
    <define name="LOG_NAME" class="com.temp.common.base.log.logback.LogPathCus"></define>

    <!-- <define name="LOG_PATH" class="util.filter.logback.LogFullPath"></define> -->
    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>
    <!-- 自定义控制台输出 通过正则匹配可以输出的日志 -->
    <appender name="PERSONAL_STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
        <Filter class="com.temp.common.base.log.logback.LogBackFilterRegx">
            <regxaccept>com.*.DemoLogger</regxaccept>
            <!--<regxaccept>cn.*</regxaccept>-->
        </Filter>
    </appender>
    <!-- 按照每天生成日志文件 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--     <Filter class="xxxxxx"> -->
        <!--     		<xxxxx>为流过滤分包管理</xxxxx> -->
        <!--     </Filter> -->
        <!--         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> -->
        <rollingPolicy class="com.temp.common.base.log.logback.NameRollingPolicy">
            <!--             日志文件输出的文件名 -->
            <FileNamePattern>${LOG_HOME}/${LOG_NAME}/Console.log.%d{yyyy-MM-dd}.log</FileNamePattern>
            <!--             日志文件保留天数 -->
            <MaxHistory>30</MaxHistory>
            <totalSizeCap>10KB</totalSizeCap>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
        <!--日志文件最大的大小-->
        <!--        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy"> -->
        <!--          <MaxFileSize>10KB</MaxFileSize> -->
        <!--        </triggeringPolicy> -->
    </appender>
    <appender name="FILE_PERSONAL" class="ch.qos.logback.core.rolling.RollingFileAppender">

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--             日志文件输出的文件名 -->
            <FileNamePattern>${LOG_HOME}/${LOG_NAME}/web/TestWeb.log.%d{yyyy-MM-dd}.log</FileNamePattern>
            <!--             日志文件保留天数 -->
            <MaxHistory>30</MaxHistory>
            <totalSizeCap>10KB</totalSizeCap>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            <!--<charset class="java.nio.charset.Charset">UTF-8</charset>-->
        </encoder>
        <!--日志文件最大的大小-->
        <!--        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy"> -->
        <!--          <MaxFileSize>10KB</MaxFileSize> -->
        <!--        </triggeringPolicy> -->
    </appender>
    <!-- show parameters for hibernate sql 专为 Hibernate 定制 -->
    <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="TRACE"/>
    <logger name="org.hibernate.type.descriptor.sql.BasicExtractor" level="DEBUG"/>
    <logger name="org.hibernate.SQL" level="DEBUG"/>
    <logger name="org.hibernate.engine.QueryParameters" level="DEBUG"/>
    <logger name="org.hibernate.engine.query.HQLQueryPlan" level="DEBUG"/>

    <!--myibatis log configure-->
    <logger name="com.apache.ibatis" level="TRACE"/>
    <logger name="java.sql.Connection" level="DEBUG"/>
    <logger name="java.sql.Statement" level="DEBUG"/>
    <logger name="java.sql.PreparedStatement" level="DEBUG"/>

    <!-- 日志输出级别 -->
    <root level="error">
        <appender-ref ref="STDOUT"/>
                 <!--<appender-ref ref="PERSONAL_STDOUT" />-->
        <appender-ref ref="FILE"/>
    </root>
    <!-- 日志输出级别 -->
    <logger name="com" level="debug">
        <!--         <appender-ref ref="FILE" /> -->
        <!--<appender-ref ref="FILE_PERSONAL"/>-->
        <appender-ref ref="PERSONAL_STDOUT"/>

    </logger>
    <!--日志异步到数据库 -->
    <!--<appender name="DB" class="ch.qos.logback.classic.db.DBAppender">-->
    <!--&lt;!&ndash;日志异步到数据库 &ndash;&gt; -->
    <!--<connectionSource class="ch.qos.logback.core.db.DriverManagerConnectionSource">-->
    <!--&lt;!&ndash;连接池 &ndash;&gt; -->
    <!--<dataSource class="com.alibaba.druid.pool.DruidDataSource">-->
    <!--<driverClass>com.mysql.jdbc.Driver</driverClass>-->
    <!--<url>jdbc:mysql://127.0.0.1:3306/kugou</url>-->
    <!--<user>root</user>-->
    <!--<password>198728</password>-->
    <!--</dataSource>-->
    <!--</connectionSource>-->
    <!--</appender>-->
</configuration>